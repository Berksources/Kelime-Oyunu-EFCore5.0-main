// <auto-generated />
using System;
using Entity.KelimeOyunu;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entity.KelimeOyunu.Migrations
{
    [DbContext(typeof(KelimeOyunuDBContext))]
    [Migration("20210410152143_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.KelimeOyunu.EightWord", b =>
                {
                    b.Property<int>("EightWordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EightWordAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EightWordData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EightWordQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EightWordScore")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EightWordID");

                    b.ToTable("EightWords");
                });

            modelBuilder.Entity("Entity.KelimeOyunu.FifthWord", b =>
                {
                    b.Property<int>("FifthWordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FifthWordAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FifthWordData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FifthWordQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FifthWordScore")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FifthWordID");

                    b.ToTable("FifthWords");
                });

            modelBuilder.Entity("Entity.KelimeOyunu.FourWord", b =>
                {
                    b.Property<int>("FourWordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FourWordAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FourWordData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FourWordQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FourWordScore")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FourWordID");

                    b.ToTable("FourWords");
                });

            modelBuilder.Entity("Entity.KelimeOyunu.NineWord", b =>
                {
                    b.Property<int>("NineWordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NineWordAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NineWordData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NineWordQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NineWordScore")
                        .HasColumnType("int");

                    b.HasKey("NineWordID");

                    b.ToTable("NineWords");
                });

            modelBuilder.Entity("Entity.KelimeOyunu.ScoreTable", b =>
                {
                    b.Property<int>("ScoreTableID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScoreData")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ScoreTableID");

                    b.HasIndex("UserID");

                    b.ToTable("ScoreTables");
                });

            modelBuilder.Entity("Entity.KelimeOyunu.SevenWord", b =>
                {
                    b.Property<int>("SevenWordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SevenWordAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SevenWordData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SevenWordQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SevenWordScore")
                        .HasColumnType("int");

                    b.HasKey("SevenWordID");

                    b.ToTable("SevenWords");
                });

            modelBuilder.Entity("Entity.KelimeOyunu.SixthWord", b =>
                {
                    b.Property<int>("SixthWordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SixthWordAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SixthWordData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SixthWordQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SixthWordScore")
                        .HasColumnType("int");

                    b.HasKey("SixthWordID");

                    b.ToTable("SixthWords");
                });

            modelBuilder.Entity("Entity.KelimeOyunu.TenWord", b =>
                {
                    b.Property<int>("TenWordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenWordAnswer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenWordData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenWordQuestion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenWordScore")
                        .HasColumnType("int");

                    b.HasKey("TenWordID");

                    b.ToTable("TenWords");
                });

            modelBuilder.Entity("Entity.KelimeOyunu.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEMail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("UserIsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("UserIsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("UserLastScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRoleID")
                        .HasColumnType("int");

                    b.Property<string>("UserSurname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("UserRoleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            CreatedDate = new DateTime(2021, 4, 10, 18, 21, 42, 802, DateTimeKind.Local).AddTicks(1286),
                            DataGuidID = new Guid("e193b1b7-1cbe-460c-bc4f-06006baa4888"),
                            UserEMail = "berk.garip@hbksoftware.com",
                            UserIsActive = true,
                            UserIsEmailConfirmed = true,
                            UserName = "Berk",
                            UserPassword = "berk2222",
                            UserRoleID = 1,
                            UserSurname = "Garip"
                        },
                        new
                        {
                            UserID = 2,
                            CreatedDate = new DateTime(2021, 4, 10, 18, 21, 42, 804, DateTimeKind.Local).AddTicks(1439),
                            DataGuidID = new Guid("e14798ca-71b1-432d-8de6-c08414cd7893"),
                            UserEMail = "Kullanici@gmail.com",
                            UserIsActive = true,
                            UserIsEmailConfirmed = true,
                            UserName = "Kullanici",
                            UserPassword = "berk2222",
                            UserRoleID = 2,
                            UserSurname = "Kullanici"
                        });
                });

            modelBuilder.Entity("Entity.KelimeOyunu.UserRole", b =>
                {
                    b.Property<int>("UserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataGuidID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserRoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserRoleID");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleID = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataGuidID = new Guid("7b952c84-fc68-4f72-bc45-cee6324cd862"),
                            UserRoleName = "Admin"
                        },
                        new
                        {
                            UserRoleID = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataGuidID = new Guid("ea1a4bda-a4dc-49ad-9d3d-4f593dce19ff"),
                            UserRoleName = "Oyuncu"
                        });
                });

            modelBuilder.Entity("Entity.KelimeOyunu.ScoreTable", b =>
                {
                    b.HasOne("Entity.KelimeOyunu.User", "User")
                        .WithMany("ScoreTables")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entity.KelimeOyunu.User", b =>
                {
                    b.HasOne("Entity.KelimeOyunu.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Entity.KelimeOyunu.User", b =>
                {
                    b.Navigation("ScoreTables");
                });

            modelBuilder.Entity("Entity.KelimeOyunu.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
